# Integration:

HYPERV_JOB_URL=https://jenkins.dev.drivenets.net/job/drivenets/job/hypervisor/job/PR-541/5/
DNOS_SI_JOB_URL=https://jenkins.dev.drivenets.net/job/drivenets/job/dnos_si/job/dev_v0_3/lastSuccessfulBuild/



#HV
###

set cli-timestamp
configure
service-instances instance dn_su1 url https://jenkins.dev.drivenets.net/job/drivenets/job/dnos_si/job/dev_v0_3/lastSuccessfulBuild/artifact/docker-compose-release.yml/*view*/ si_policy si_ha_dn_su1.cfg
commit
service-instances instance dn_su1 interface ge100-0/0/0
service-instances instance dn_su1 interface ge100-0/0/1
service-instances instance dn_su1 interface ge100-0/0/2
service-instances instance dn_su1 interface ge100-0/0/3
service-instances instance dn_su1 interface ge100-0/0/4
commit



dbcli /drivenets-top/service-instances/instances/instance/service-instance-resources/ipv4-access-lists/access-list
dbcli /drivenets-top/service-instances/instances/instance/service-instance-resources/ipv6-access-lists/access-list
dbcli /drivenets-top/service-instances/instances/instance/service-instance-resources/vrfs/vrf

dbcli /drivenets-top/access-lists/ipv4/access-list
dbcli /drivenets-top/access-lists/ipv6/access-list
dbcli /drivenets-top/network-services/vrfs/vrf



#SI
###

#   in VM:
docker-enter $(docker ps -f name=dnsistackdn_su1_routing-engin  --format '{{.Names}}')
#   in RE:
DEV_MODE=1 python3.6 -m cli
#   in CLI:
set cli-timestamp
configure
network-services vrf moran_vrf_1
!
!
network-services vrf moran_vrf_2
!
!
access-lists ipv4 moran_acl_ipv4_1
!
!
access-lists ipv4 moran_acl_ipv4_2
!
!
access-lists ipv6 moran_acl_ipv6_1
!
!
access-lists ipv6 moran_acl_ipv6_2
!
!
commit


no network-services vrf moran_vrf_2
no access-lists ipv4 moran_acl_ipv4_2
no access-lists ipv6 moran_acl_ipv6_2
commit


'si_1_test_acl_2' in
d = {'title': 'Access Lists - Ipv4', 'headers': ['Access-list name', 'Index', 'Type', 'Nexthop1', 'Protocol', 'Src Ports', 'Src IP', 'Dest Ports', 'Dest IP', 'Dscp', 'Description'], 'rows': [{'access_list_name': 'si_1_test_acl_2', 'index': '10', 'type': 'allow', 'nexthop1': '', 'protocol': 'any', 'src_ports': 'any', 'src_ip': 'any', 'dest_ports': 'any', 'dest_ip': 'any', 'dscp': '', 'description': ''}, {'access_list_name': '', 'index': '65534', 'type': 'allow', 'nexthop1': '', 'protocol': 'icmp(0x01)', 'src_ports': 'any', 'src_ip': 'any', 'dest_ports': 'any', 'dest_ip': 'any', 'dscp': '', 'description': ''}, {'access_list_name': '', 'index': '65535', 'type': 'deny', 'nexthop1': '', 'protocol': 'any-host(0x3D)', 'src_ports': 'any', 'src_ip': 'any', 'dest_ports': 'any', 'dest_ip': 'any', 'dscp': '', 'description': ''}, {'access_list_name': 'Access Lists - Ipv6'}, {'access_list_name': 'Access-list name', 'index': 'Index', 'type': 'Type', 'nexthop1': 'Nexthop1', 'protocol': 'Protocol', 'src_ports': 'Src Ports', 'src_ip': 'Src IP', 'dest_ports': 'Dest Ports', 'dest_ip': 'Dest IP', 'dscp': 'Dscp', 'description': 'Description'}, {'access_list_name': '--------------------+---------+--------+------------+-----------------+-------------+----------+--------------+-----------+--------+---------------'}, {'access_list_name': 'si_1_test_acl_2', 'index': '10', 'type': 'allow', 'nexthop1': '', 'protocol': 'any', 'src_ports': 'any', 'src_ip': 'any', 'dest_ports': 'any', 'dest_ip': 'any', 'dscp': '', 'description': ''}, {'access_list_name': '', 'index': '65534', 'type': 'allow', 'nexthop1': '', 'protocol': 'ipv6-icmp(0x3A)', 'src_ports': 'any', 'src_ip': 'any', 'dest_ports': 'any', 'dest_ip': 'any', 'dscp': '', 'description': ''}, {'access_list_name': '', 'index': '65535', 'type': 'deny', 'nexthop1': '', 'protocol': 'any-host(0x3D)', 'src_ports': 'any', 'src_ip': 'any', 'dest_ports': 'any', 'dest_ip': 'any', 'dscp': '', 'description': ''}]}





In [1]: from hyperv.tests import test_ms_acl

In [2]: test_ms_acl.test_acls_cleanup(env_info, hyperv_cli, get_dnos_si_cli, gnmi, get_dnos_si_gnmi)






In [1]: from hyperv.tests import test_si_vrf;test_si_vrf.test_si_vrf_cleanup(env_info, hyperv_cli, get_dnos_si_cli)

